[已完成] 计划取消static关键字,采用` var .static_member int32` 形式定义伴生成员
计划设计要求任何布局成员都使用"."访问,包括静态和非静态成员.
[已完成] 计划使用"% res T"语法替换"..T res T"语法以更有效的支持模板参数. ---> 最终设计 : let res T; ---> 最终设计又改为谓词引导的定义分支
[已完成] 设计,枚举名与作用域同名时,枚举才成为透明枚举

[已完成] 计划使用谓词选择定义语法设计替换let语法设计
    谓词影响定义的内容
    签名完全相同方法和运算符的实现,分别可以有三种书写形式(带模板参数,带谓词,仅类名)
    ~~~alioth
        class map<K V>{
            class node<V> [V==ptr] [V==var] {
                0:{ ptr value V; }
                1:{ var value V; }
                var key K;
            }
        }
    ~~~

计划设计词法级别的谓词引导的分支
[已完成] 计划实现var和ptr关键字都可省的语法设计
[已完成] 计划设计语法,连续的元素原型中,不写元素类型有一下两种表示
    数据类型为模板名则元素类型服从模板参数
    否则元素类型为变量
定位运算符#后加LABLE
[已完成] 计划在表达式中使用class引导一个可以使用模板参数列表的名称
[已完成] 计划所有基类成员都要使用 成员@基类 访问,所以类布局和基类布局不再使用同一个名称空间
计划将入口标记提取出来作为单独的语法结构 
    module hello : io net entry sayhi
计划设计类似于self关键字的机制,在抽象方法中用于表示自身类型